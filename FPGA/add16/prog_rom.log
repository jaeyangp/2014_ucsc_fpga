KCPSM3 Assembler log file for program 'prog_rom.psm'.
Generated by KCPSM3 version v2.10
Ken Chapman - Xilinx Ltd - 18th June 2012

Assembly datestamp: 19 Mar 2014
Assembly timestamp: 17:25:14

Last occupied address: 016 hex


 Addr Code             Instruction

 000                   ; prog_rom.psm
 000                   ; UCSC Extension - Digital Design with FPGA
 000                   ; Jae-Yang Park
 000                   ; jaeyangp@gmail.com
 000                   ;
 000                   ; input: 0: not reached one sec. 1: one sec happened
 000                   ; output: ans_l --> OUTPUTPORT_L
 000                   ;         ans_h --> OUTPUTPORT_H
 000                   ;         {ans_h, ans_l} is 16 bit result
 000                   ; input and output port
 000                   CONSTANT INPUTPORT, 00             ; '1' at every one second
 000                   CONSTANT OUTPUTPORT_L, 01          ; LSB portion of result
 000                   CONSTANT OUTPUTPORT_H, 02          ; MSB portion of result
 000                   ; constant values
 000                   CONSTANT MAX_MSB, 27               ; 9999 (270fh)
 000                   CONSTANT MAX_LSB, 0F
 000                   CONSTANT START_NUM, 04             ; start number
 000                   CONSTANT INC_NUM, 23               ; incremenr value, 35 (23h)
 000                   ; register alias
 000                   NAMEREG s0, indata
 000                   NAMEREG s1, startdata              ; inclement value
 000                   NAMEREG s2, ans_l                  ; LSB of result
 000                   NAMEREG s3, ans_h                  ; MSB of result
 000                   ;
 000                   ; main program
 000                   ;
 000             main: 
 000  3000A            CALL 00A[init]
 001  3000D            CALL 00D[display]                  ; result through output port
 002                   ;
 002             calc: 
 002  04000            INPUT s0[indata], 00[INPUTPORT]
 003  30010            CALL 010[add_num]                  ; add ans + increment values
 004  3000D            CALL 00D[display]                  ; send result through output port to display
 005  14327            COMPARE s3[ans_h], 27[MAX_MSB]     ; check if result reached 9999 (270fh)
 006  35802            JUMP C, 002[calc]                  ; ans_h < 9984
 007                   ;
 007         next_chk: ; ans_h > 9984
 007  1420F            COMPARE s2[ans_l], 0F[MAX_LSB]     ; check if ans_l > 15, 9984+15 = 9999
 008  35C00            JUMP NC, 000[main]                 ; yes, result is reached 9999
 009  34002            JUMP 002[calc]                     ; no, result is not reached 9999
 00A                   ;
 00A             init: 
 00A  00204            LOAD s2[ans_l], 04[START_NUM]      ; start number
 00B  00300            LOAD s3[ans_h], 00                 ; clear the MSB of result
 00C  2A000            RETURN 
 00D                   ; send results through output port
 00D          display: 
 00D  2C201            OUTPUT s2[ans_l], 01[OUTPUTPORT_L] ; LSB
 00E  2C302            OUTPUT s3[ans_h], 02[OUTPUTPORT_H] ; MSB
 00F  2A000            RETURN 
 010                   ;
 010                   ; add numbers
 010                   ; ans_l = ans_l + startdata
 010          add_num: 
 010  14000            COMPARE s0[indata], 00             ; 1: one sec is happened, 0 is not
 011  35413            JUMP NZ, 013[add_num1]             ; no one sec, then return, or go to add number
 012  2A000            RETURN 
 013                   ;
 013         add_num1: 
 013  00123            LOAD s1[startdata], 23[INC_NUM]    ; increment at a distance of 35
 014  19210            ADD s2[ans_l], s1[startdata]       ; add LSB with startdata
 015  1A300            ADDCY s3[ans_h], 00                ; add MSB with carry
 016  2A000            RETURN                             ; {ans_h, ans_l} is complete 16 bits result



List of defined constants

timestamp_hours = 17'd
timestamp_minutes = 25'd
timestamp_seconds = 14'd
datestamp_year = 14'd
datestamp_month = 3'd
datestamp_day = 19'd
INPUTPORT = 00
OUTPUTPORT_L = 01
OUTPUTPORT_H = 02
MAX_MSB = 27
MAX_LSB = 0F
START_NUM = 04
INC_NUM = 23



List of text strings

KCPSM3_version$ = "v2.10"
datestamp$ = "19 Mar 2014"
timestamp$ = "17:25:14"



End of KCPSM3 log file.
